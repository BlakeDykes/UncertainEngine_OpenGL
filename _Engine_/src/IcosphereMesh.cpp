#include "IcosphereMesh.h"
#include "File.h"
#include "MeshFileHdr.h"
#include "BoundingSphere.h"

using namespace Uncertain;

#define WRITE_DATA_TO_FILE 0

#if WRITE_DATA_TO_FILE

Tri_index triList_icosphere[] =
{
	{ 0,   1,	 2	 },
	{ 3,   4,	 5	 },
	{ 6,   7,	 8	 },
	{ 9,   10 ,	 11	 },
	{ 12,  13 ,	 14	 },
	{ 15,  16 ,	 17	 },
	{ 18,  19 ,	 20	 },
	{ 21,  22 ,	 23	 },
	{ 24,  25 ,	 26	 },
	{ 27,  28 ,	 29	 },
	{ 30,  31 ,	 32	 },
	{ 33,  34 ,	 35	 },
	{ 36,  37 ,	 38	 },
	{ 39,  40 ,	 41	 },
	{ 42,  43 ,	 44	 },
	{ 45,  46 ,	 47	 },
	{ 48,  49 ,	 50	 },
	{ 51,  52 ,	 53	 },
	{ 54,  55 ,	 56	 },
	{ 57,  58 ,	 59	 },
	{ 60,  61 ,	 62	 },
	{ 63,  64 ,	 65	 },
	{ 66,  67 ,	 68	 },
	{ 69,  70 ,	 71	 },
	{ 72,  73 ,	 74	 },
	{ 75,  76 ,	 77	 },
	{ 78,  79 ,	 80	 },
	{ 81,  82 ,	 83	 },
	{ 84,  85 ,	 86	 },
	{ 87,  88 ,	 89	 },
	{ 90,  91 ,	 92	 },
	{ 93,  94 ,	 95	 },
	{ 96,  97 ,	 98	 },
	{ 99,  100,	 101 },
	{ 102, 103,	 104 },
	{ 105, 106,	 107 },
	{ 108, 109,	 110 },
	{ 111, 112,	 113 },
	{ 114, 115,	 116 },
	{ 117, 118,	 119 },
	{ 120, 121,	 122 },
	{ 123, 124,	 125 },
	{ 126, 127,	 128 },
	{ 129, 130,	 131 },
	{ 132, 133,	 134 },
	{ 135, 136,	 137 },
	{ 138, 139,	 140 },
	{ 141, 142,	 143 },
	{ 144, 145,	 146 },
	{ 147, 148,	 149 },
	{ 150, 151,	 152 },
	{ 153, 154,	 155 },
	{ 156, 157,	 158 },
	{ 159, 160,	 161 },
	{ 162, 163,	 164 },
	{ 165, 166,	 167 },
	{ 168, 169,	 170 },
	{ 171, 172,	 173 },
	{ 174, 175,	 176 },
	{ 177, 178,	 179 },
	{ 180, 181,	 182 },
	{ 183, 184,	 185 },
	{ 186, 187,	 188 },
	{ 189, 190,	 191 },
	{ 192, 193,	 194 },
	{ 195, 196,	 197 },
	{ 198, 199,	 200 },
	{ 201, 202,	 203 },
	{ 204, 205,	 206 },
	{ 207, 208,	 209 },
	{ 210, 211,	 212 },
	{ 213, 214,	 215 },
	{ 216, 217,	 218 },
	{ 219, 220,	 221 },
	{ 222, 223,	 224 },
	{ 225, 226,	 227 },
	{ 228, 229,	 230 },
	{ 231, 232,	 233 },
	{ 234, 235,	 236 },
	{ 237, 238,	 239 }
};

Vert_xyz icosphereData_xyz[] =
{
	{ 0.000000f,		0.000000f,		-1.000000f },                 
	{ 0.425323f,		-0.309011f,		-0.850654f },                
	{ -0.162456f,		-0.499995f,		-0.850654f },               
	{ 0.723607f,		-0.525725f,		-0.447220f },                
	{ 0.425323f,		-0.309011f,		-0.850654f },                
	{ 0.850648f,		0.000000f,		-0.525736f },                 
	{ 0.000000f,		0.000000f,		-1.000000f },                 
	{ -0.162456f,		-0.499995f,		-0.850654f },               
	{ -0.525730f,		0.000000f,		-0.850652f },                
	{ 0.000000f,		0.000000f,		-1.000000f },                 
	{ -0.525730f,		0.000000f,		-0.850652f },                
	{ -0.162456f,		0.499995f,		-0.850654f },                
	{ 0.000000f,		0.000000f,		-1.000000f },                 
	{ -0.162456f,		0.499995f,		-0.850654f },                
	{ 0.425323f,		0.309011f,		-0.850654f },                 
	{ 0.723607f,		-0.525725f,		-0.447220f },                
	{ 0.850648f,		0.000000f,		-0.525736f },                 
	{ 0.951058f,		-0.309013f,		0.000000f  },                 
	{ -0.276388f,		-0.850649f,		-0.447220f },               
	{ 0.262869f,		-0.809012f,		-0.525738f },                
	{ 0.000000f,		-1.000000f,		0.000000f  },                 
	{ -0.894426f,		0.000000f,		-0.447216f },                
	{ -0.688189f,		-0.499997f,		-0.525736f },               
	{ -0.951058f,		-0.309013f,		0.000000f  },                
	{ -0.276388f,		0.850649f,		-0.447220f },                
	{ -0.688189f,		0.499997f,		-0.525736f },                
	{ -0.587786f,		0.809017f,		0.000000f  },                 
	{ 0.723607f,		0.525725f,		-0.447220f },                 
	{ 0.262869f,		0.809012f,		-0.525738f },                 
	{ 0.587786f,		0.809017f,		0.000000f  },                  
	{ 0.723607f,		-0.525725f,		-0.447220f },                
	{ 0.951058f,		-0.309013f,		0.000000f },                 
	{ 0.587786f,		-0.809017f,		0.000000f },                 
	{ -0.276388f,		-0.850649f,		-0.447220f },               
	{ 0.000000f,		-1.000000f,		0.000000f },                 
	{ -0.587786f,		-0.809017f,		0.000000f },                
	{ -0.894426f,		0.000000f,		-0.447216f },                
	{ -0.951058f,		-0.309013f,		0.000000f },                
	{ -0.951058f,		0.309013f,		0.000000f },                 
	{ -0.276388f,		0.850649f,		-0.447220f },                
	{ -0.587786f,		0.809017f,		0.000000f },                 
	{ 0.000000f,		1.000000f,		0.000000f },                  
	{ 0.723607f,		0.525725f,		-0.447220f },                 
	{ 0.587786f,		0.809017f,		0.000000f },                  
	{ 0.951058f,		0.309013f,		0.000000f },                  
	{ 0.276388f,		-0.850649f,		0.447220f },                 
	{ 0.688189f,		-0.499997f,		0.525736f },                 
	{ 0.162456f,		-0.499995f,		0.850654f },                 
	{ -0.723607f,		-0.525725f,		0.447220f },                
	{ -0.262869f,		-0.809012f,		0.525738f },                
	{ -0.425323f,		-0.309011f,		0.850654f },                
	{ -0.723607f,		0.525725f,		0.447220f },                 
	{ -0.850648f,		0.000000f,		0.525736f },                 
	{ -0.425323f,		0.309011f,		0.850654f },                 
	{ 0.276388f,		0.850649f,		0.447220f },                  
	{ -0.262869f,		0.809012f,		0.525738f },                 
	{ 0.162456f,		0.499995f,		0.850654f },                  
	{ 0.894426f,		0.000000f,		0.447216f },                  
	{ 0.688189f,		0.499997f,		0.525736f },                  
	{ 0.525730f,		0.000000f,		0.850652f },                  
	{ 0.525730f,		0.000000f,		0.850652f },                  
	{ 0.162456f,		0.499995f,		0.850654f },                  
	{ 0.000000f,		0.000000f,		1.000000f },                  
	{ 0.525730f,		0.000000f,		0.850652f },                  
	{ 0.688189f,		0.499997f,		0.525736f },                  
	{ 0.162456f,		0.499995f,		0.850654f },                  
	{ 0.688189f,		0.499997f,		0.525736f },                  
	{ 0.276388f,		0.850649f,		0.447220f },                  
	{ 0.162456f,		0.499995f,		0.850654f },                  
	{ 0.162456f,		0.499995f,		0.850654f },                  
	{ -0.425323f,		0.309011f,		0.850654f },                 
	{ 0.000000f,		0.000000f,		1.000000f },                  
	{ 0.162456f,		0.499995f,		0.850654f },                  
	{ -0.262869f,		0.809012f,		0.525738f },                 
	{ -0.425323f,		0.309011f,		0.850654f },                 
	{ -0.262869f,		0.809012f,		0.525738f },                 
	{ -0.723607f,		0.525725f,		0.447220f },                 
	{ -0.425323f,		0.309011f,		0.850654f },                 
	{ -0.425323f,		0.309011f,		0.850654f },                 
	{ -0.425323f,		-0.309011f,		0.850654f },                
	{ 0.000000f,		0.000000f,		1.000000f },                  
	{ -0.425323f,		0.309011f,		0.850654f },                 
	{ -0.850648f,		0.000000f,		0.525736f },                 
	{ -0.425323f,		-0.309011f,		0.850654f },                
	{ -0.850648f,		0.000000f,		0.525736f },                 
	{ -0.723607f,		-0.525725f,		0.447220f },                
	{ -0.425323f,		-0.309011f,		0.850654f },                
	{ -0.425323f,		-0.309011f,		0.850654f },                
	{ 0.162456f,		-0.499995f,		0.850654f },                 
	{ 0.000000f,		0.000000f,		1.000000f },                  
	{ -0.425323f,		-0.309011f,		0.850654f },                
	{ -0.262869f,		-0.809012f,		0.525738f },                
	{ 0.162456f,		-0.499995f,		0.850654f },                 
	{ -0.262869f,		-0.809012f,		0.525738f },                
	{ 0.276388f,		-0.850649f,		0.447220f },                 
	{ 0.162456f,		-0.499995f,		0.850654f },                 
	{ 0.162456f,		-0.499995f,		0.850654f },                 
	{ 0.525730f,		0.000000f,		0.850652f },                  
	{ 0.000000f,		0.000000f,		1.000000f },                  
	{ 0.162456f,		-0.499995f,		0.850654f },                 
	{ 0.688189f,		-0.499997f,		0.525736f },                 
	{ 0.525730f,		0.000000f,		0.850652f },                  
	{ 0.688189f,		-0.499997f,		0.525736f },                 
	{ 0.894426f,		0.000000f,		0.447216f },                  
	{ 0.525730f,		0.000000f,		0.850652f },                  
	{ 0.951058f,		0.309013f,		0.000000f },                  
	{ 0.688189f,		0.499997f,		0.525736f },                  
	{ 0.894426f,		0.000000f,		0.447216f },                  
	{ 0.951058f,		0.309013f,		0.000000f },                  
	{ 0.587786f,		0.809017f,		0.000000f },                  
	{ 0.688189f,		0.499997f,		0.525736f },                  
	{ 0.587786f,		0.809017f,		0.000000f },                  
	{ 0.276388f,		0.850649f,		0.447220f },                  
	{ 0.688189f,		0.499997f,		0.525736f },                  
	{ 0.000000f,		1.000000f,		0.000000f },                  
	{ -0.262869f,		0.809012f,		0.525738f },                 
	{ 0.276388f,		0.850649f,		0.447220f },                  
	{ 0.000000f,		1.000000f,		0.000000f },                  
	{ -0.587786f,		0.809017f,		0.000000f },                 
	{ -0.262869f,		0.809012f,		0.525738f },                 
	{ -0.587786f,		0.809017f,		0.000000f },                 
	{ -0.723607f,		0.525725f,		0.447220f },                 
	{ -0.262869f,		0.809012f,		0.525738f },                 
	{ -0.951058f,		0.309013f,		0.000000f },                 
	{ -0.850648f,		0.000000f,		0.525736f },                 
	{ -0.723607f,		0.525725f,		0.447220f },                 
	{ -0.951058f,		0.309013f,		0.000000f },                 
	{ -0.951058f,		-0.309013f,		0.000000f },                
	{ -0.850648f,		0.000000f,		0.525736f },                 
	{ -0.951058f,		-0.309013f,		0.000000f },                
	{ -0.723607f,		-0.525725f,		0.447220f },                
	{ -0.850648f,		0.000000f,		0.525736f },                 
	{ -0.587786f,		-0.809017f,		0.000000f },                
	{ -0.262869f,		-0.809012f,		0.525738f },                
	{ -0.723607f,		-0.525725f,		0.447220f },                
	{ -0.587786f,		-0.809017f,		0.000000f },                
	{ 0.000000f,		-1.000000f,		0.000000f },                 
	{ -0.262869f,		-0.809012f,		0.525738f },                
	{ 0.000000f,		-1.000000f,		0.000000f },                 
	{ 0.276388f,		-0.850649f,		0.447220f },                 
	{ -0.262869f,		-0.809012f,		0.525738f },                
	{ 0.587786f,		-0.809017f,		0.000000f },                 
	{ 0.688189f,		-0.499997f,		0.525736f },                 
	{ 0.276388f,		-0.850649f,		0.447220f },                 
	{ 0.587786f,		-0.809017f,		0.000000f },                 
	{ 0.951058f,		-0.309013f,		0.000000f },                 
	{ 0.688189f,		-0.499997f,		0.525736f },                 
	{ 0.951058f,		-0.309013f,		0.000000f },                 
	{ 0.894426f,		0.000000f,		0.447216f },                  
	{ 0.688189f,		-0.499997f,		0.525736f },                 
	{ 0.587786f,		0.809017f,		0.000000f },                  
	{ 0.000000f,		1.000000f,		0.000000f },                  
	{ 0.276388f,		0.850649f,		0.447220f },                  
	{ 0.587786f,		0.809017f,		0.000000f },                  
	{ 0.262869f,		0.809012f,		-0.525738f },                 
	{ 0.000000f,		1.000000f,		0.000000f },                  
	{ 0.262869f,		0.809012f,		-0.525738f },                 
	{ -0.276388f,		0.850649f,		-0.447220f },                
	{ 0.000000f,		1.000000f,		0.000000f },                  
	{ -0.587786f,		0.809017f,		0.000000f },                 
	{ -0.951058f,		0.309013f,		0.000000f },                 
	{ -0.723607f,		0.525725f,		0.447220f },                 
	{ -0.587786f,		0.809017f,		0.000000f },                 
	{ -0.688189f,		0.499997f,		-0.525736f },                
	{ -0.951058f,		0.309013f,		0.000000f },                 
	{ -0.688189f,		0.499997f,		-0.525736f },                
	{ -0.894426f,		0.000000f,		-0.447216f },                
	{ -0.951058f,		0.309013f,		0.000000f },                 
	{ -0.951058f,		-0.309013f,		0.000000f },                
	{ -0.587786f,		-0.809017f,		0.000000f },                
	{ -0.723607f,		-0.525725f,		0.447220f },                
	{ -0.951058f,		-0.309013f,		0.000000f },                
	{ -0.688189f,		-0.499997f,		-0.525736f },               
	{ -0.587786f,		-0.809017f,		0.000000f },                
	{ -0.688189f,		-0.499997f,		-0.525736f },               
	{ -0.276388f,		-0.850649f,		-0.447220f },               
	{ -0.587786f,		-0.809017f,		0.000000f },                
	{ 0.000000f,		-1.000000f,		0.000000f },                 
	{ 0.587786f,		-0.809017f,		0.000000f },                 
	{ 0.276388f,		-0.850649f,		0.447220f },                 
	{ 0.000000f,		-1.000000f,		0.000000f },                 
	{ 0.262869f,		-0.809012f,		-0.525738f },                
	{ 0.587786f,		-0.809017f,		0.000000f },                 
	{ 0.262869f,		-0.809012f,		-0.525738f },                
	{ 0.723607f,		-0.525725f,		-0.447220f },                
	{ 0.587786f,		-0.809017f,		0.000000f },                 
	{ 0.951058f,		-0.309013f,		0.000000f },                 
	{ 0.951058f,		0.309013f,		0.000000f },                  
	{ 0.894426f,		0.000000f,		0.447216f },                  
	{ 0.951058f,		-0.309013f,		0.000000f },                 
	{ 0.850648f,		0.000000f,		-0.525736f },                 
	{ 0.951058f,		0.309013f,		0.000000f },                  
	{ 0.850648f,		0.000000f,		-0.525736f },                 
	{ 0.723607f,		0.525725f,		-0.447220f },                 
	{ 0.951058f,		0.309013f,		0.000000f },                  
	{ 0.425323f,		0.309011f,		-0.850654f },                 
	{ 0.262869f,		0.809012f,		-0.525738f },                 
	{ 0.723607f,		0.525725f,		-0.447220f },                 
	{ 0.425323f,		0.309011f,		-0.850654f },                 
	{ -0.162456f,		0.499995f,		-0.850654f },                
	{ 0.262869f,		0.809012f,		-0.525738f },                 
	{ -0.162456f,		0.499995f,		-0.850654f },                
	{ -0.276388f,		0.850649f,		-0.447220f },                
	{ 0.262869f,		0.809012f,		-0.525738f },                 
	{ -0.162456f,		0.499995f,		-0.850654f },                
	{ -0.688189f,		0.499997f,		-0.525736f },                
	{ -0.276388f,		0.850649f,		-0.447220f },                
	{ -0.162456f,		0.499995f,		-0.850654f },                
	{ -0.525730f,		0.000000f,		-0.850652f },                
	{ -0.688189f,		0.499997f,		-0.525736f },                
	{ -0.525730f,		0.000000f,		-0.850652f },                
	{ -0.894426f,		0.000000f,		-0.447216f },                
	{ -0.688189f,		0.499997f,		-0.525736f },                
	{ -0.525730f,		0.000000f,		-0.850652f },                
	{ -0.688189f,		-0.499997f,		-0.525736f },               
	{ -0.894426f,		0.000000f,		-0.447216f },                
	{ -0.525730f,		0.000000f,		-0.850652f },                
	{ -0.162456f,		-0.499995f,		-0.850654f },               
	{ -0.688189f,		-0.499997f,		-0.525736f },               
	{ -0.162456f,		-0.499995f,		-0.850654f },               
	{ -0.276388f,		-0.850649f,		-0.447220f },               
	{ -0.688189f,		-0.499997f,		-0.525736f },               
	{ 0.850648f,		0.000000f,		-0.525736f },                 
	{ 0.425323f,		0.309011f,		-0.850654f },                 
	{ 0.723607f,		0.525725f,		-0.447220f },                 
	{ 0.850648f,		0.000000f,		-0.525736f },                 
	{ 0.425323f,		-0.309011f,		-0.850654f },                
	{ 0.425323f,		0.309011f,		-0.850654f },                 
	{ 0.425323f,		-0.309011f,		-0.850654f },                
	{ 0.000000f,		0.000000f,		-1.000000f },                 
	{ 0.425323f,		0.309011f,		-0.850654f },                 
	{ -0.162456f,		-0.499995f,		-0.850654f },               
	{ 0.262869f,		-0.809012f,		-0.525738f },                
	{ -0.276388f,		-0.850649f,		-0.447220f },               
	{ -0.162456f,		-0.499995f,		-0.850654f },               
	{ 0.425323f,		-0.309011f,		-0.850654f },                
	{ 0.262869f,		-0.809012f,		-0.525738f },                
	{ 0.425323f,		-0.309011f,		-0.850654f },                
	{ 0.723607f,		-0.525725f,		-0.447220f },                
	{ 0.262869f,		-0.809012f,		-0.525738f }                
};

Vert_uv icosphereData_uv[] =
{
	{ 0.818181f, 0.000000f },
	{ 0.772726f, 0.078731f },
	{ 0.863635f, 0.078731f },
	{ 0.727272f, 0.157461f },
	{ 0.681818f, 0.078731f },
	{ 0.636363f, 0.157461f },
	{ 0.090909f, 0.000000f },
	{ 0.045454f, 0.078731f },
	{ 0.136363f, 0.078731f },
	{ 0.272727f, 0.000000f },
	{ 0.227273f, 0.078731f },
	{ 0.318182f, 0.078731f },
	{ 0.454545f, 0.000000f },
	{ 0.409090f, 0.078731f },
	{ 0.500000f, 0.078731f },
	{ 0.727272f, 0.157461f },
	{ 0.636363f, 0.157461f },
	{ 0.681818f, 0.236191f },
	{ 0.909090f, 0.157461f },
	{ 0.818181f, 0.157461f },
	{ 0.863635f, 0.236191f },
	{ 0.181818f, 0.157461f },
	{ 0.090909f, 0.157461f },
	{ 0.136363f, 0.236191f },
	{ 0.363636f, 0.157461f },
	{ 0.272727f, 0.157461f },
	{ 0.318182f, 0.236191f },
	{ 0.545454f, 0.157461f },
	{ 0.454545f, 0.157461f },
	{ 0.500000f, 0.236191f },
	{ 0.727272f, 0.157461f },
	{ 0.681818f, 0.236191f },
	{ 0.772726f, 0.236191f },
	{ 0.909090f, 0.157461f },
	{ 0.863635f, 0.236191f },
	{ 0.954545f, 0.236191f },
	{ 0.181818f, 0.157461f },
	{ 0.136363f, 0.236191f },
	{ 0.227273f, 0.236191f },
	{ 0.363636f, 0.157461f },
	{ 0.318182f, 0.236191f },
	{ 0.409090f, 0.236191f },
	{ 0.545454f, 0.157461f },
	{ 0.500000f, 0.236191f },
	{ 0.590909f, 0.236191f },
	{ 0.818181f, 0.314921f },
	{ 0.727272f, 0.314921f },
	{ 0.772726f, 0.393651f },
	{ 1.000000f, 0.314921f },
	{ 0.909091f, 0.314921f },
	{ 0.954545f, 0.393651f },
	{ 0.272727f, 0.314921f },
	{ 0.181818f, 0.314921f },
	{ 0.227273f, 0.393651f },
	{ 0.454545f, 0.314921f },
	{ 0.363636f, 0.314921f },
	{ 0.409090f, 0.393651f },
	{ 0.636363f, 0.314921f },
	{ 0.545454f, 0.314921f },
	{ 0.590909f, 0.393651f },
	{ 0.590909f, 0.393651f },
	{ 0.500000f, 0.393651f },
	{ 0.545454f, 0.472382f },
	{ 0.590909f, 0.393651f },
	{ 0.545454f, 0.314921f },
	{ 0.500000f, 0.393651f },
	{ 0.545454f, 0.314921f },
	{ 0.454545f, 0.314921f },
	{ 0.500000f, 0.393651f },
	{ 0.409090f, 0.393651f },
	{ 0.318182f, 0.393651f },
	{ 0.363636f, 0.472382f },
	{ 0.409090f, 0.393651f },
	{ 0.363636f, 0.314921f },
	{ 0.318182f, 0.393651f },
	{ 0.363636f, 0.314921f },
	{ 0.272727f, 0.314921f },
	{ 0.318182f, 0.393651f },
	{ 0.227273f, 0.393651f },
	{ 0.136363f, 0.393651f },
	{ 0.181818f, 0.472382f },
	{ 0.227273f, 0.393651f },
	{ 0.181818f, 0.314921f },
	{ 0.136363f, 0.393651f },
	{ 0.181818f, 0.314921f },
	{ 0.090909f, 0.314921f },
	{ 0.136363f, 0.393651f },
	{ 0.954545f, 0.393651f },
	{ 0.863635f, 0.393651f },
	{ 0.909090f, 0.472382f },
	{ 0.954545f, 0.393651f },
	{ 0.909091f, 0.314921f },
	{ 0.863635f, 0.393651f },
	{ 0.909091f, 0.314921f },
	{ 0.818181f, 0.314921f },
	{ 0.863635f, 0.393651f },
	{ 0.772726f, 0.393651f },
	{ 0.681818f, 0.393651f },
	{ 0.727272f, 0.472382f },
	{ 0.772726f, 0.393651f },
	{ 0.727272f, 0.314921f },
	{ 0.681818f, 0.393651f },
	{ 0.727272f, 0.314921f },
	{ 0.636363f, 0.314921f },
	{ 0.681818f, 0.393651f },
	{ 0.590909f, 0.236191f },
	{ 0.545454f, 0.314921f },
	{ 0.636363f, 0.314921f },
	{ 0.590909f, 0.236191f },
	{ 0.500000f, 0.236191f },
	{ 0.545454f, 0.314921f },
	{ 0.500000f, 0.236191f },
	{ 0.454545f, 0.314921f },
	{ 0.545454f, 0.314921f },
	{ 0.409090f, 0.236191f },
	{ 0.363636f, 0.314921f },
	{ 0.454545f, 0.314921f },
	{ 0.409090f, 0.236191f },
	{ 0.318182f, 0.236191f },
	{ 0.363636f, 0.314921f },
	{ 0.318182f, 0.236191f },
	{ 0.272727f, 0.314921f },
	{ 0.363636f, 0.314921f },
	{ 0.227273f, 0.236191f },
	{ 0.181818f, 0.314921f },
	{ 0.272727f, 0.314921f },
	{ 0.227273f, 0.236191f },
	{ 0.136363f, 0.236191f },
	{ 0.181818f, 0.314921f },
	{ 0.136363f, 0.236191f },
	{ 0.090909f, 0.314921f },
	{ 0.181818f, 0.314921f },
	{ 0.954545f, 0.236191f },
	{ 0.909091f, 0.314921f },
	{ 1.000000f, 0.314921f },
	{ 0.954545f, 0.236191f },
	{ 0.863635f, 0.236191f },
	{ 0.909091f, 0.314921f },
	{ 0.863635f, 0.236191f },
	{ 0.818181f, 0.314921f },
	{ 0.909091f, 0.314921f },
	{ 0.772726f, 0.236191f },
	{ 0.727272f, 0.314921f },
	{ 0.818181f, 0.314921f },
	{ 0.772726f, 0.236191f },
	{ 0.681818f, 0.236191f },
	{ 0.727272f, 0.314921f },
	{ 0.681818f, 0.236191f },
	{ 0.636363f, 0.314921f },
	{ 0.727272f, 0.314921f },
	{ 0.500000f, 0.236191f },
	{ 0.409090f, 0.236191f },
	{ 0.454545f, 0.314921f },
	{ 0.500000f, 0.236191f },
	{ 0.454545f, 0.157461f },
	{ 0.409090f, 0.236191f },
	{ 0.454545f, 0.157461f },
	{ 0.363636f, 0.157461f },
	{ 0.409090f, 0.236191f },
	{ 0.318182f, 0.236191f },
	{ 0.227273f, 0.236191f },
	{ 0.272727f, 0.314921f },
	{ 0.318182f, 0.236191f },
	{ 0.272727f, 0.157461f },
	{ 0.227273f, 0.236191f },
	{ 0.272727f, 0.157461f },
	{ 0.181818f, 0.157461f },
	{ 0.227273f, 0.236191f },
	{ 0.136363f, 0.236191f },
	{ 0.045454f, 0.236191f },
	{ 0.090909f, 0.314921f },
	{ 0.136363f, 0.236191f },
	{ 0.090909f, 0.157461f },
	{ 0.045454f, 0.236191f },
	{ 0.090909f, 0.157461f },
	{ 0.000000f, 0.157461f },
	{ 0.045454f, 0.236191f },
	{ 0.863635f, 0.236191f },
	{ 0.772726f, 0.236191f },
	{ 0.818181f, 0.314921f },
	{ 0.863635f, 0.236191f },
	{ 0.818181f, 0.157461f },
	{ 0.772726f, 0.236191f },
	{ 0.818181f, 0.157461f },
	{ 0.727272f, 0.157461f },
	{ 0.772726f, 0.236191f },
	{ 0.681818f, 0.236191f },
	{ 0.590909f, 0.236191f },
	{ 0.636363f, 0.314921f },
	{ 0.681818f, 0.236191f },
	{ 0.636363f, 0.157461f },
	{ 0.590909f, 0.236191f },
	{ 0.636363f, 0.157461f },
	{ 0.545454f, 0.157461f },
	{ 0.590909f, 0.236191f },
	{ 0.500000f, 0.078731f },
	{ 0.454545f, 0.157461f },
	{ 0.545454f, 0.157461f },
	{ 0.500000f, 0.078731f },
	{ 0.409090f, 0.078731f },
	{ 0.454545f, 0.157461f },
	{ 0.409090f, 0.078731f },
	{ 0.363636f, 0.157461f },
	{ 0.454545f, 0.157461f },
	{ 0.318182f, 0.078731f },
	{ 0.272727f, 0.157461f },
	{ 0.363636f, 0.157461f },
	{ 0.318182f, 0.078731f },
	{ 0.227273f, 0.078731f },
	{ 0.272727f, 0.157461f },
	{ 0.227273f, 0.078731f },
	{ 0.181818f, 0.157461f },
	{ 0.272727f, 0.157461f },
	{ 0.136363f, 0.078731f },
	{ 0.090909f, 0.157461f },
	{ 0.181818f, 0.157461f },
	{ 0.136363f, 0.078731f },
	{ 0.045454f, 0.078731f },
	{ 0.090909f, 0.157461f },
	{ 0.045454f, 0.078731f },
	{ 0.000000f, 0.157461f },
	{ 0.090909f, 0.157461f },
	{ 0.636363f, 0.157461f },
	{ 0.590909f, 0.078731f },
	{ 0.545454f, 0.157461f },
	{ 0.636363f, 0.157461f },
	{ 0.681818f, 0.078731f },
	{ 0.590909f, 0.078731f },
	{ 0.681818f, 0.078731f },
	{ 0.636363f, 0.000000f },
	{ 0.590909f, 0.078731f },
	{ 0.863635f, 0.078731f },
	{ 0.818181f, 0.157461f },
	{ 0.909090f, 0.157461f },
	{ 0.863635f, 0.078731f },
	{ 0.772726f, 0.078731f },
	{ 0.818181f, 0.157461f },
	{ 0.772726f, 0.078731f },
	{ 0.727272f, 0.157461f },
	{ 0.818181f, 0.157461f }
};

Vert_NxNyNz icosphereData_nxnynz[] =
{
	{ 0.102381f,	-0.315090f,		-0.943523f },
	{ 0.102381f,	-0.315090f,		-0.943523f },
	{ 0.102381f,	-0.315090f,		-0.943523f },
	{ 0.700224f,	-0.268032f,		-0.661699f },
	{ 0.700224f,	-0.268032f,		-0.661699f },
	{ 0.700224f,	-0.268032f,		-0.661699f },
	{ -0.268034f,	-0.194736f,		-0.943523f },
	{ -0.268034f,	-0.194736f,		-0.943523f },
	{ -0.268034f,	-0.194736f,		-0.943523f },
	{ -0.268034f,	0.194737f,		-0.943523f },
	{ -0.268034f,	0.194737f,		-0.943523f },
	{ -0.268034f,	0.194737f,		-0.943523f },
	{ 0.102381f,	0.315090f,		-0.943523f },
	{ 0.102381f,	0.315090f,		-0.943523f },
	{ 0.102381f,	0.315090f,		-0.943523f },
	{ 0.904989f,	-0.268032f,		-0.330385f },
	{ 0.904989f,	-0.268032f,		-0.330385f },
	{ 0.904989f,	-0.268032f,		-0.330385f },
	{ 0.024747f,	-0.943521f,		-0.330386f },
	{ 0.024747f,	-0.943521f,		-0.330386f },
	{ 0.024747f,	-0.943521f,		-0.330386f },
	{ -0.889697f,	-0.315095f,		-0.330385f },
	{ -0.889697f,	-0.315095f,		-0.330385f },
	{ -0.889697f,	-0.315095f,		-0.330385f },
	{ -0.574602f,	0.748784f,		-0.330388f },
	{ -0.574602f,	0.748784f,		-0.330388f },
	{ -0.574602f,	0.748784f,		-0.330388f },
	{ 0.534576f,	0.777865f,		-0.330387f },
	{ 0.534576f,	0.777865f,		-0.330387f },
	{ 0.534576f,	0.777865f,		-0.330387f },
	{ 0.802609f,	-0.583126f,		-0.125627f },
	{ 0.802609f,	-0.583126f,		-0.125627f },
	{ 0.802609f,	-0.583126f,		-0.125627f },
	{ -0.306569f,	-0.943522f,		-0.125629f },
	{ -0.306569f,	-0.943522f,		-0.125629f },
	{ -0.306569f,	-0.943522f,		-0.125629f },
	{ -0.992077f,	-0.000000f,		-0.125628f },
	{ -0.992077f,	-0.000000f,		-0.125628f },
	{ -0.992077f,	-0.000000f,		-0.125628f },
	{ -0.306569f,	0.943522f,		-0.125629f },
	{ -0.306569f,	0.943522f,		-0.125629f },
	{ -0.306569f,	0.943522f,		-0.125629f },
	{ 0.802609f,	0.583126f,		-0.125627f },
	{ 0.802609f,	0.583126f,		-0.125627f },
	{ 0.802609f,	0.583126f,		-0.125627f },
	{ 0.408946f,	-0.628425f,		0.661698f  },
	{ 0.408946f,	-0.628425f,		0.661698f  },
	{ 0.408946f,	-0.628425f,		0.661698f  },
	{ -0.471300f,	-0.583122f,		0.661699f  },
	{ -0.471300f,	-0.583122f,		0.661699f  },
	{ -0.471300f,	-0.583122f,		0.661699f  },
	{ -0.700224f,	0.268032f,		0.661699f  },
	{ -0.700224f,	0.268032f,		0.661699f  },
	{ -0.700224f,	0.268032f,		0.661699f  },
	{ 0.038530f,	0.748779f,		0.661699f  },
	{ 0.038530f,	0.748779f,		0.661699f  },
	{ 0.038530f,	0.748779f,		0.661699f  },
	{ 0.724042f,	0.194736f,		0.661695f  },
	{ 0.724042f,	0.194736f,		0.661695f  },
	{ 0.724042f,	0.194736f,		0.661695f  },
	{ 0.268034f,	0.194737f,		0.943523f  },
	{ 0.268034f,	0.194737f,		0.943523f  },
	{ 0.268034f,	0.194737f,		0.943523f  },
	{ 0.491119f,	0.356821f,		0.794657f  },
	{ 0.491119f,	0.356821f,		0.794657f  },
	{ 0.491119f,	0.356821f,		0.794657f  },
	{ 0.408946f,	0.628425f,		0.661699f  },
	{ 0.408946f,	0.628425f,		0.661699f  },
	{ 0.408946f,	0.628425f,		0.661699f  },
	{ -0.102381f,	0.315090f,		0.943523f  },
	{ -0.102381f,	0.315090f,		0.943523f  },
	{ -0.102381f,	0.315090f,		0.943523f  },
	{ -0.187594f,	0.577345f,		0.794658f  },
	{ -0.187594f,	0.577345f,		0.794658f  },
	{ -0.187594f,	0.577345f,		0.794658f  },
	{ -0.471300f,	0.583122f,		0.661699f  },
	{ -0.471300f,	0.583122f,		0.661699f  },
	{ -0.471300f,	0.583122f,		0.661699f  },
	{ -0.331305f,	0.000000f,		0.943524f  },
	{ -0.331305f,	0.000000f,		0.943524f  },
	{ -0.331305f,	0.000000f,		0.943524f  },
	{ -0.607060f,	0.000000f,		0.794656f  },
	{ -0.607060f,	0.000000f,		0.794656f  },
	{ -0.607060f,	0.000000f,		0.794656f  },
	{ -0.700224f,	-0.268032f,		0.661699f  },
	{ -0.700224f,	-0.268032f,		0.661699f  },
	{ -0.700224f,	-0.268032f,		0.661699f  },
	{ -0.102381f,	-0.315090f,		0.943523f  },
	{ -0.102381f,	-0.315090f,		0.943523f  },
	{ -0.102381f,	-0.315090f,		0.943523f  },
	{ -0.187594f,	-0.577345f,		0.794658f  },
	{ -0.187594f,	-0.577345f,		0.794658f  },
	{ -0.187594f,	-0.577345f,		0.794658f  },
	{ 0.038530f,	-0.748779f,		0.661699f  },
	{ 0.038530f,	-0.748779f,		0.661699f  },
	{ 0.038530f,	-0.748779f,		0.661699f  },
	{ 0.268034f,	-0.194737f,		0.943523f  },
	{ 0.268034f,	-0.194737f,		0.943523f  },
	{ 0.268034f,	-0.194737f,		0.943523f  },
	{ 0.491119f,	-0.356821f,		0.794657f  },
	{ 0.491119f,	-0.356821f,		0.794657f  },
	{ 0.491119f,	-0.356821f,		0.794657f  },
	{ 0.724042f,	-0.194736f,		0.661695f  },
	{ 0.724042f,	-0.194736f,		0.661695f  },
	{ 0.724042f,	-0.194736f,		0.661695f  },
	{ 0.889697f,	0.315095f,		0.330385f  },
	{ 0.889697f,	0.315095f,		0.330385f  },
	{ 0.889697f,	0.315095f,		0.330385f  },
	{ 0.794656f,	0.577348f,		0.187595f  },
	{ 0.794656f,	0.577348f,		0.187595f  },
	{ 0.794656f,	0.577348f,		0.187595f  },
	{ 0.574602f,	0.748784f,		0.330388f  },
	{ 0.574602f,	0.748784f,		0.330388f  },
	{ 0.574602f,	0.748784f,		0.330388f  },
	{ -0.024747f,	0.943521f,		0.330386f  },
	{ -0.024747f,	0.943521f,		0.330386f  },
	{ -0.024747f,	0.943521f,		0.330386f  },
	{ -0.303531f,	0.934171f,		0.187597f  },
	{ -0.303531f,	0.934171f,		0.187597f  },
	{ -0.303531f,	0.934171f,		0.187597f  },
	{ -0.534576f,	0.777865f,		0.330387f  },
	{ -0.534576f,	0.777865f,		0.330387f  },
	{ -0.534576f,	0.777865f,		0.330387f  },
	{ -0.904989f,	0.268032f,		0.330385f  },
	{ -0.904989f,	0.268032f,		0.330385f  },
	{ -0.904989f,	0.268032f,		0.330385f  },
	{ -0.982246f,	0.000000f,		0.187599f  },
	{ -0.982246f,	0.000000f,		0.187599f  },
	{ -0.982246f,	0.000000f,		0.187599f  },
	{ -0.904989f,	-0.268031f,		0.330385f  },
	{ -0.904989f,	-0.268031f,		0.330385f  },
	{ -0.904989f,	-0.268031f,		0.330385f  },
	{ -0.534576f,	-0.777865f,		0.330387f  },
	{ -0.534576f,	-0.777865f,		0.330387f  },
	{ -0.534576f,	-0.777865f,		0.330387f  },
	{ -0.303531f,	-0.934171f,		0.187597f  },
	{ -0.303531f,	-0.934171f,		0.187597f  },
	{ -0.303531f,	-0.934171f,		0.187597f  },
	{ -0.024747f,	-0.943521f,		0.330386f  },
	{ -0.024747f,	-0.943521f,		0.330386f  },
	{ -0.024747f,	-0.943521f,		0.330386f  },
	{ 0.574602f,	-0.748784f,		0.330388f  },
	{ 0.574602f,	-0.748784f,		0.330388f  },
	{ 0.574602f,	-0.748784f,		0.330388f  },
	{ 0.794656f,	-0.577348f,		0.187595f  },
	{ 0.794656f,	-0.577348f,		0.187595f  },
	{ 0.794656f,	-0.577348f,		0.187595f  },
	{ 0.889697f,	-0.315095f,		0.330385f  },
	{ 0.889697f,	-0.315095f,		0.330385f  },
	{ 0.889697f,	-0.315095f,		0.330385f  },
	{ 0.306569f,	0.943522f,		0.125629f  },
	{ 0.306569f,	0.943522f,		0.125629f  },
	{ 0.306569f,	0.943522f,		0.125629f  },
	{ 0.303531f,	0.934171f,		-0.187597f },
	{ 0.303531f,	0.934171f,		-0.187597f },
	{ 0.303531f,	0.934171f,		-0.187597f },
	{ 0.024747f,	0.943521f,		-0.330386f },
	{ 0.024747f,	0.943521f,		-0.330386f },
	{ 0.024747f,	0.943521f,		-0.330386f },
	{ -0.802609f,	0.583126f,		0.125627f  },
	{ -0.802609f,	0.583126f,		0.125627f  },
	{ -0.802609f,	0.583126f,		0.125627f  },
	{ -0.794656f,	0.577348f,		-0.187595f },
	{ -0.794656f,	0.577348f,		-0.187595f },
	{ -0.794656f,	0.577348f,		-0.187595f },
	{ -0.889697f,	0.315095f,		-0.330385f },
	{ -0.889697f,	0.315095f,		-0.330385f },
	{ -0.889697f,	0.315095f,		-0.330385f },
	{ -0.802609f,	-0.583126f,		0.125627f  },
	{ -0.802609f,	-0.583126f,		0.125627f  },
	{ -0.802609f,	-0.583126f,		0.125627f  },
	{ -0.794656f,	-0.577348f,		-0.187595f },
	{ -0.794656f,	-0.577348f,		-0.187595f },
	{ -0.794656f,	-0.577348f,		-0.187595f },
	{ -0.574602f,	-0.748784f,		-0.330388f },
	{ -0.574602f,	-0.748784f,		-0.330388f },
	{ -0.574602f,	-0.748784f,		-0.330388f },
	{ 0.306569f,	-0.943522f,		0.125629f  },
	{ 0.306569f,	-0.943522f,		0.125629f  },
	{ 0.306569f,	-0.943522f,		0.125629f  },
	{ 0.303531f,	-0.934171f,		-0.187597f },
	{ 0.303531f,	-0.934171f,		-0.187597f },
	{ 0.303531f,	-0.934171f,		-0.187597f },
	{ 0.534576f,	-0.777865f,		-0.330387f },
	{ 0.534576f,	-0.777865f,		-0.330387f },
	{ 0.534576f,	-0.777865f,		-0.330387f },
	{ 0.992077f,	0.000000f,		0.125628f  },
	{ 0.992077f,	0.000000f,		0.125628f  },
	{ 0.992077f,	0.000000f,		0.125628f  },
	{ 0.982246f,	0.000000f,		-0.187599f },
	{ 0.982246f,	0.000000f,		-0.187599f },
	{ 0.982246f,	0.000000f,		-0.187599f },
	{ 0.904989f,	0.268031f,		-0.330385f },
	{ 0.904989f,	0.268031f,		-0.330385f },
	{ 0.904989f,	0.268031f,		-0.330385f },
	{ 0.471300f,	0.583122f,		-0.661699f },
	{ 0.471300f,	0.583122f,		-0.661699f },
	{ 0.471300f,	0.583122f,		-0.661699f },
	{ 0.187594f,	0.577345f,		-0.794658f },
	{ 0.187594f,	0.577345f,		-0.794658f },
	{ 0.187594f,	0.577345f,		-0.794658f },
	{ -0.038530f,	0.748779f,		-0.661699f },
	{ -0.038530f,	0.748779f,		-0.661699f },
	{ -0.038530f,	0.748779f,		-0.661699f },
	{ -0.408946f,	0.628425f,		-0.661698f },
	{ -0.408946f,	0.628425f,		-0.661698f },
	{ -0.408946f,	0.628425f,		-0.661698f },
	{ -0.491119f,	0.356821f,		-0.794657f },
	{ -0.491119f,	0.356821f,		-0.794657f },
	{ -0.491119f,	0.356821f,		-0.794657f },
	{ -0.724042f,	0.194736f,		-0.661695f },
	{ -0.724042f,	0.194736f,		-0.661695f },
	{ -0.724042f,	0.194736f,		-0.661695f },
	{ -0.724042f,	-0.194736f,		-0.661695f },
	{ -0.724042f,	-0.194736f,		-0.661695f },
	{ -0.724042f,	-0.194736f,		-0.661695f },
	{ -0.491119f,	-0.356821f,		-0.794657f },
	{ -0.491119f,	-0.356821f,		-0.794657f },
	{ -0.491119f,	-0.356821f,		-0.794657f },
	{ -0.408946f,	-0.628425f,		-0.661698f },
	{ -0.408946f,	-0.628425f,		-0.661698f },
	{ -0.408946f,	-0.628425f,		-0.661698f },
	{ 0.700224f,	0.268032f,		-0.661699f },
	{ 0.700224f,	0.268032f,		-0.661699f },
	{ 0.700224f,	0.268032f,		-0.661699f },
	{ 0.607060f,	0.000000f,		-0.794656f },
	{ 0.607060f,	0.000000f,		-0.794656f },
	{ 0.607060f,	0.000000f,		-0.794656f },
	{ 0.331305f,	0.000000f,		-0.943524f },
	{ 0.331305f,	0.000000f,		-0.943524f },
	{ 0.331305f,	0.000000f,		-0.943524f },
	{ -0.038530f,	-0.748779f,		-0.661699f },
	{ -0.038530f,	-0.748779f,		-0.661699f },
	{ -0.038530f,	-0.748779f,		-0.661699f },
	{ 0.187594f,	-0.577345f,		-0.794658f },
	{ 0.187594f,	-0.577345f,		-0.794658f },
	{ 0.187594f,	-0.577345f,		-0.794658f },
	{ 0.471300f,	-0.583122f,		-0.661699f },
	{ 0.471300f,	-0.583122f,		-0.661699f },
	{ 0.471300f,	-0.583122f,		-0.661699f }
};

#define ICO_DATA_NUM_VERTS (int)(sizeof(icosphereData_xyz)/sizeof(Vert_xyz));
#define ICO_TRILIST_NUM_TRIANGLES (int)(sizeof(triList_icosphere)/sizeof(Tri_index));

#endif // WRITE_DATA_TO_FILE


IcosphereMesh::IcosphereMesh(const char* const pMeshFileName)
	:Mesh(MeshName::ICOSPHERE_MESH, new BoundingSphere())
{
	this->CreateVAO(pMeshFileName);
}

void IcosphereMesh::CreateVAO(const char* const pMeshFileName)
{
	assert(pMeshFileName);
	AZUL_UNUSED_VAR(pMeshFileName);

	// Create a VAO
	glGenVertexArrays(1, &this->VAO);
	assert(this->VAO);
	glBindVertexArray(this->VAO);

	// Create VBOs
	glGenBuffers(1, &this->VBO_Verts);
	assert(this->VBO_Verts != 0);

	glGenBuffers(1, &this->VBO_Norms);
	assert(this->VBO_Norms != 0);

	glGenBuffers(1, &this->VBO_Texts);
	assert(this->VBO_Texts != 0);

	glGenBuffers(1, &this->VBO_Index);
	assert(this->VBO_Index);

	File::Handle fh;
	File::Error ferror;

	MeshFileHdr meshHdr;

	//-----------------------------
	// Write data from file
	//-----------------------------

#if WRITE_DATA_TO_FILE

	this->NumVerts = ICO_DATA_NUM_VERTS;
	this->NumTris = ICO_TRILIST_NUM_TRIANGLES;

	strncpy_s(meshHdr.ObjName, MeshFileHdr::OBJECT_NAME_SIZE, EngineNames::Stringify(MeshName::ICOSPHERE_MESH), _TRUNCATE);

	meshHdr.numVerts = this->NumVerts;
	meshHdr.vertexBufferOffset = 0;
	meshHdr.textsBufferOffset = 0;
	meshHdr.normsBufferOffset = 0;

	meshHdr.numTriList = this->NumTris;
	meshHdr.triListBufferdOffset = 0;


	ferror = File::Open(fh, pMeshFileName, File::Mode::READ_WRITE);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Write(fh, &meshHdr, sizeof(MeshFileHdr));
	assert(ferror == File::Error::SUCCESS);

	// Write vert buffer
	ferror = File::Tell(fh, meshHdr.vertexBufferOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Write(fh, icosphereData_xyz, sizeof(Vert_xyz) * this->NumVerts);
	assert(ferror == File::Error::SUCCESS);

	// Write norm buffer
	ferror = File::Tell(fh, meshHdr.normsBufferOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Write(fh, icosphereData_nxnynz, sizeof(Vert_NxNyNz) * this->NumVerts);
	assert(ferror == File::Error::SUCCESS);

	// Write texture buffer
	ferror = File::Tell(fh, meshHdr.textsBufferOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Write(fh, icosphereData_uv, sizeof(Vert_uv) * this->NumVerts);
	assert(ferror == File::Error::SUCCESS);

	// Write index buffer
	ferror = File::Tell(fh, meshHdr.triListBufferdOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Write(fh, triList_icosphere, sizeof(Tri_index) * this->NumTris);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Flush(fh);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Seek(fh, File::Position::BEGIN, 0);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Write(fh, &meshHdr, sizeof(MeshFileHdr));
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Flush(fh);
	assert(ferror == File::Error::SUCCESS);

	MeshFileHdr meshHdr2;

	ferror = File::Seek(fh, File::Position::BEGIN, 0);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Read(fh, &meshHdr2, sizeof(MeshFileHdr));
	assert(ferror == File::Error::SUCCESS);

	assert(memcmp(&meshHdr, &meshHdr2, sizeof(MeshFileHdr)) == 0);

	ferror = File::Close(fh);
	assert(ferror == File::Error::SUCCESS);

#endif

	//-----------------------------
	// Read data from file
	//-----------------------------
	ferror = File::Open(fh, pMeshFileName, File::Mode::READ);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Read(fh, &meshHdr, sizeof(MeshFileHdr));
	assert(ferror == File::Error::SUCCESS);

	this->NumVerts = meshHdr.numVerts;
	this->NumTris = meshHdr.numTriList;

	// Create data buffers
	Vert_xyz* data_xyz = new Vert_xyz[(unsigned int)meshHdr.numVerts];
	assert(data_xyz);
	Vert_NxNyNz* data_nxnynz = new Vert_NxNyNz[(unsigned int)meshHdr.numVerts];
	assert(data_nxnynz);
	Vert_uv* data_uv = new Vert_uv[(unsigned int)meshHdr.numVerts];
	assert(data_uv);
	Tri_index* data_TriList = new Tri_index[(unsigned int)meshHdr.numVerts];
	assert(data_TriList);

	// Read verts from meshHdr into buffers
	ferror = File::Seek(fh, File::Position::BEGIN, (int)meshHdr.vertexBufferOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Read(fh, data_xyz, sizeof(Vert_xyz) * this->NumVerts);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Seek(fh, File::Position::BEGIN, (int)meshHdr.normsBufferOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Read(fh, data_nxnynz, sizeof(Vert_uv) * this->NumVerts);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Seek(fh, File::Position::BEGIN, (int)meshHdr.textsBufferOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Read(fh, data_uv, sizeof(Vert_uv) * this->NumVerts);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Seek(fh, File::Position::BEGIN, (int)meshHdr.triListBufferdOffset);
	assert(ferror == File::Error::SUCCESS);
	ferror = File::Read(fh, data_TriList, sizeof(Tri_index) * this->NumTris);
	assert(ferror == File::Error::SUCCESS);

	ferror = File::Close(fh);
	assert(ferror == File::Error::SUCCESS);

	//-----------------------------
	// Send data to GPU
	//-----------------------------

	// Vert data
	glBindBuffer(GL_ARRAY_BUFFER, this->VBO_Verts);
	glBufferData(GL_ARRAY_BUFFER, (GLsizeiptr)(sizeof(Vert_xyz) * this->NumVerts), data_xyz, GL_STATIC_DRAW);
	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, sizeof(Vert_xyz), 0);
	glEnableVertexAttribArray(0);

	// Norm data
	glBindBuffer(GL_ARRAY_BUFFER, this->VBO_Norms);
	glBufferData(GL_ARRAY_BUFFER, (GLsizeiptr)(sizeof(Vert_NxNyNz) * this->NumVerts), data_nxnynz, GL_STATIC_DRAW);
	glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(Vert_NxNyNz), 0);
	glEnableVertexAttribArray(1);

	// Text data
	glBindBuffer(GL_ARRAY_BUFFER, this->VBO_Texts);
	glBufferData(GL_ARRAY_BUFFER, (GLsizeiptr)(sizeof(Vert_uv)* this->NumVerts), data_uv, GL_STATIC_DRAW);
	glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, sizeof(Vert_uv), 0);
	glEnableVertexAttribArray(2);

	// Index data
	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this->VBO_Index);
	glBufferData(GL_ELEMENT_ARRAY_BUFFER, (GLsizeiptr)(sizeof(Tri_index) * this->NumTris), data_TriList, GL_STATIC_DRAW);

	delete[] data_xyz;
	delete[] data_uv;
	delete[] data_nxnynz;
	delete[] data_TriList;
}

IcosphereMesh::~IcosphereMesh()
{
	// Remove dynamic
}