
syntax = "proto3";

option optimize_for = LITE_RUNTIME;

message TextureData_proto
{
	
	enum TEXTURE_TYPE
	{
		JPEG	= 0;
		PNG		= 1;
		BMP		= 2;
		GIF		= 3;
		TGA		= 4;
	};

	
	enum TEXTURE_MAG_FILTER
	{
		MAG_NEAREST = 0;
		MAG_LINEAR	= 1;
	};

	enum TEXTURE_MIN_FILTER
	{
		MIN_NEAREST					= 0;
		MIN_LINEAR					= 1;
		MIN_NEAREST_MIPMAP_NEAREST	= 2;
		MIN_LINEAR_MIPMAP_NEAREST	= 3;
		MIN_NEAREST_MIPMAP_LINEAR	= 4;
		MIN_LINEAR_MIPMAP_LINEAR	= 5;
	};

	enum TEXTURE_WRAP
	{
		WRAP_CLAMP_TO_EDGE		= 0;
		WRAP_MIRRORED_REPEAT	= 1;
		WRAP_REPEAT				= 2;
	};

	enum TEXTURE_COMPONENT
	{
		BYTE			= 0;
		UNSIGNED_BYTE	= 1;
		SHORT			= 2;
		UNSIGNED_SHORT	= 3;
		INT				= 4;
		UNSIGNED_INT	= 5;
		FLOAT			= 6;
		DOUBLE			= 7;
	};

	enum TEXTURE_EFORMAT
	{
		EFORMAT_BGR = 0;
		EFORMAT_RGB = 1;
		EFORMAT_RGBA = 2;
	};

	enum TEXTURE_NCOMPONENT
	{
		NCOMPONENT_BGR = 0;
		NCOMPONENT_RGB = 1;
		NCOMPONENT_RGBA = 2;
	};

	
	message BaseColorFactor
	{
		optional float r = 1;
		optional float g = 2;
		optional float b = 3;
		optional float a = 4;
	}

	optional BaseColorFactor	baseColor			= 1;
	optional TEXTURE_TYPE		textType			= 2;
	optional TEXTURE_MAG_FILTER	magFilter			= 3;
	optional TEXTURE_MIN_FILTER	minFilter			= 4;
	optional TEXTURE_WRAP		wrapS				= 5;
	optional TEXTURE_WRAP		wrapT				= 6;
	optional TEXTURE_EFORMAT    eFormat				= 7;
	optional TEXTURE_NCOMPONENT nComponent			= 8;
	optional uint32				width				= 9;
	optional uint32				height				= 10;
	optional uint32				component			= 11;
	optional uint32				bits				= 12;
	optional TEXTURE_COMPONENT	pixel_type			= 13;
	optional uint32				materialIndex		= 14;
	optional uint32				textureIndex		= 15;
	optional uint32				dataSize			= 16;
	optional uint32				as_is				= 17;
	optional uint32				textEnabled			= 18;
	optional uint32				baseColorEnabled	= 19;
	optional uint32				fileNameSize		= 20;
	optional bytes				fileNameData		= 21;
	optional bytes				poData				= 22;
}


